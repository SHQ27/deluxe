<?php

/**
 * BasereporteCampana
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_reporte_campana
 * @property integer $id_campana
 * @property string $rubro
 * @property integer $cantidad_pedidos
 * @property integer $unidades_vendidas
 * @property float $unidades_promedio_pedido
 * @property decimal $total_facturado
 * @property decimal $pdb
 * @property decimal $costo_total
 * @property decimal $margen_bruto
 * @property decimal $margen_promedio
 * @property integer $total_stock
 * @property clob $ejecucion_de_stock
 * @property clob $top_productos
 * @property decimal $ticket_promedio
 * @property decimal $objetivo_facturacion
 * @property string $objetivo_resultado
 * @property string $condicion_fiscal
 * @property integer $cantidad_pedido_hombre
 * @property integer $cantidad_pedido_mujer
 * @property campana $campana
 * 
 * @method integer        getIdReporteCampana()         Returns the current record's "id_reporte_campana" value
 * @method integer        getIdCampana()                Returns the current record's "id_campana" value
 * @method string         getRubro()                    Returns the current record's "rubro" value
 * @method integer        getCantidadPedidos()          Returns the current record's "cantidad_pedidos" value
 * @method integer        getUnidadesVendidas()         Returns the current record's "unidades_vendidas" value
 * @method float          getUnidadesPromedioPedido()   Returns the current record's "unidades_promedio_pedido" value
 * @method decimal        getTotalFacturado()           Returns the current record's "total_facturado" value
 * @method decimal        getPdb()                      Returns the current record's "pdb" value
 * @method decimal        getCostoTotal()               Returns the current record's "costo_total" value
 * @method decimal        getMargenBruto()              Returns the current record's "margen_bruto" value
 * @method decimal        getMargenPromedio()           Returns the current record's "margen_promedio" value
 * @method integer        getTotalStock()               Returns the current record's "total_stock" value
 * @method clob           getEjecucionDeStock()         Returns the current record's "ejecucion_de_stock" value
 * @method clob           getTopProductos()             Returns the current record's "top_productos" value
 * @method decimal        getTicketPromedio()           Returns the current record's "ticket_promedio" value
 * @method decimal        getObjetivoFacturacion()      Returns the current record's "objetivo_facturacion" value
 * @method string         getObjetivoResultado()        Returns the current record's "objetivo_resultado" value
 * @method string         getCondicionFiscal()          Returns the current record's "condicion_fiscal" value
 * @method integer        getCantidadPedidoHombre()     Returns the current record's "cantidad_pedido_hombre" value
 * @method integer        getCantidadPedidoMujer()      Returns the current record's "cantidad_pedido_mujer" value
 * @method campana        getCampana()                  Returns the current record's "campana" value
 * @method reporteCampana setIdReporteCampana()         Sets the current record's "id_reporte_campana" value
 * @method reporteCampana setIdCampana()                Sets the current record's "id_campana" value
 * @method reporteCampana setRubro()                    Sets the current record's "rubro" value
 * @method reporteCampana setCantidadPedidos()          Sets the current record's "cantidad_pedidos" value
 * @method reporteCampana setUnidadesVendidas()         Sets the current record's "unidades_vendidas" value
 * @method reporteCampana setUnidadesPromedioPedido()   Sets the current record's "unidades_promedio_pedido" value
 * @method reporteCampana setTotalFacturado()           Sets the current record's "total_facturado" value
 * @method reporteCampana setPdb()                      Sets the current record's "pdb" value
 * @method reporteCampana setCostoTotal()               Sets the current record's "costo_total" value
 * @method reporteCampana setMargenBruto()              Sets the current record's "margen_bruto" value
 * @method reporteCampana setMargenPromedio()           Sets the current record's "margen_promedio" value
 * @method reporteCampana setTotalStock()               Sets the current record's "total_stock" value
 * @method reporteCampana setEjecucionDeStock()         Sets the current record's "ejecucion_de_stock" value
 * @method reporteCampana setTopProductos()             Sets the current record's "top_productos" value
 * @method reporteCampana setTicketPromedio()           Sets the current record's "ticket_promedio" value
 * @method reporteCampana setObjetivoFacturacion()      Sets the current record's "objetivo_facturacion" value
 * @method reporteCampana setObjetivoResultado()        Sets the current record's "objetivo_resultado" value
 * @method reporteCampana setCondicionFiscal()          Sets the current record's "condicion_fiscal" value
 * @method reporteCampana setCantidadPedidoHombre()     Sets the current record's "cantidad_pedido_hombre" value
 * @method reporteCampana setCantidadPedidoMujer()      Sets the current record's "cantidad_pedido_mujer" value
 * @method reporteCampana setCampana()                  Sets the current record's "campana" value
 * 
 * @package    deluxebuys
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasereporteCampana extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reporte_campana');
        $this->hasColumn('id_reporte_campana', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_campana', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('rubro', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('cantidad_pedidos', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('unidades_vendidas', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('unidades_promedio_pedido', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_facturado', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('pdb', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('costo_total', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('margen_bruto', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('margen_promedio', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('total_stock', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('ejecucion_de_stock', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('top_productos', 'clob', 65535, array(
             'type' => 'clob',
             'length' => 65535,
             ));
        $this->hasColumn('ticket_promedio', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('objetivo_facturacion', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'length' => 12,
             ));
        $this->hasColumn('objetivo_resultado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => 1,
             ));
        $this->hasColumn('condicion_fiscal', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('cantidad_pedido_hombre', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('cantidad_pedido_mujer', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('fk_reporte_campana_campana1', array(
             'fields' => 
             array(
              0 => 'id_campana',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('campana', array(
             'local' => 'id_campana',
             'foreign' => 'id_campana',
             'owningSide' => true));
    }
}