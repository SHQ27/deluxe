<?php

/**
 * BasebannerPrincipal
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_banner_principal
 * @property string $denominacion
 * @property string $url
 * @property boolean $activo
 * @property timestamp $fecha_desde
 * @property timestamp $fecha_hasta
 * @property integer $orden
 * @property boolean $mostrar_descripcion
 * @property char $color
 * @property integer $off
 * 
 * @method integer         getIdBannerPrincipal()   Returns the current record's "id_banner_principal" value
 * @method string          getDenominacion()        Returns the current record's "denominacion" value
 * @method string          getUrl()                 Returns the current record's "url" value
 * @method boolean         getActivo()              Returns the current record's "activo" value
 * @method timestamp       getFechaDesde()          Returns the current record's "fecha_desde" value
 * @method timestamp       getFechaHasta()          Returns the current record's "fecha_hasta" value
 * @method integer         getOrden()               Returns the current record's "orden" value
 * @method boolean         getMostrarDescripcion()  Returns the current record's "mostrar_descripcion" value
 * @method char            getColor()               Returns the current record's "color" value
 * @method integer         getOff()                 Returns the current record's "off" value
 * @method bannerPrincipal setIdBannerPrincipal()   Sets the current record's "id_banner_principal" value
 * @method bannerPrincipal setDenominacion()        Sets the current record's "denominacion" value
 * @method bannerPrincipal setUrl()                 Sets the current record's "url" value
 * @method bannerPrincipal setActivo()              Sets the current record's "activo" value
 * @method bannerPrincipal setFechaDesde()          Sets the current record's "fecha_desde" value
 * @method bannerPrincipal setFechaHasta()          Sets the current record's "fecha_hasta" value
 * @method bannerPrincipal setOrden()               Sets the current record's "orden" value
 * @method bannerPrincipal setMostrarDescripcion()  Sets the current record's "mostrar_descripcion" value
 * @method bannerPrincipal setColor()               Sets the current record's "color" value
 * @method bannerPrincipal setOff()                 Sets the current record's "off" value
 * 
 * @package    deluxebuys
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasebannerPrincipal extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner_principal');
        $this->hasColumn('id_banner_principal', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('denominacion', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('activo', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('fecha_desde', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('fecha_hasta', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('orden', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('mostrar_descripcion', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('color', 'char', 7, array(
             'type' => 'char',
             'default' => '#000000',
             'length' => 7,
             ));
        $this->hasColumn('off', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}