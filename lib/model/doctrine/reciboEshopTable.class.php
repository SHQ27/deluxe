<?php

/**
 * reciboEshopTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class reciboEshopTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object reciboEshopTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('reciboEshop');
    }
    
    /**
     * Inserta un recibo en la tabla de recibos de eshops
     *
     * @param int     $idPedido
     * @param float   $importe
     * @param string  $tipo
     *
     * @return Doctrine_Collection
     */
    public function insert($idEshop, $idPedidos, $importe, $tipo)
    {
        $reciboEshop = new reciboEshop();
        $reciboEshop->setTipo( $tipo );
        $reciboEshop->setImporte( $importe );
        $reciboEshop->setIdEshop( $idEshop );
        $reciboEshop->save();
        
        foreach ($idPedidos as $idPedido) {
            $reciboEshopPedido = new reciboEshopPedido();
            $reciboEshopPedido->setIdReciboEshop( $reciboEshop->getIdReciboEshop() );
            $reciboEshopPedido->setIdPedido( $idPedido );
            $reciboEshopPedido->save();   
        }
        
        return $reciboEshop;
    }
    
    public function listRecibos($idEshop, $fechaDesde = null, $fechaHasta = null)
    {
        $sqlFacturas  = '';
        $sqlFacturas .= 'SELECT \'FACTURA\' as tipo, re.fecha as fecha, p.id_pedido as id_pedido, p.fecha_pago as fecha_pago, u.nombre as nombre, u.apellido as apellido, re.importe as importe, (p.monto_envio - ( coalesce(pd.monto, 0) + coalesce(pb.monto, 0) ) ) as envio, SUM(coalesce(ppi.costo, 0)/IF(m.condicion_fiscal = \'RIN\', 1.21, 1)) as costo_mercaderia, prov.nombre as provincia, fp.denominacion as forma_pago ';
        $sqlFacturas .= 'FROM recibo_eshop re ';
        $sqlFacturas .= 'INNER JOIN recibo_eshop_pedido rep ON re.id_recibo_eshop = rep.id_recibo_eshop ';
        $sqlFacturas .= 'INNER JOIN pedido p ON p.id_pedido = rep.id_pedido ';
        $sqlFacturas .= 'INNER JOIN pedido_producto_item ppi ON ppi.id_pedido = p.id_pedido ';
        $sqlFacturas .= 'INNER JOIN producto_item pi ON pi.id_producto_item = ppi.id_producto_item ';
        $sqlFacturas .= 'INNER JOIN producto pr ON pr.id_producto = pi.id_producto ';
        $sqlFacturas .= 'INNER JOIN marca m ON m.id_marca = pr.id_marca ';
        $sqlFacturas .= 'INNER JOIN usuario u ON u.id_usuario = p.id_usuario ';
        $sqlFacturas .= 'INNER JOIN provincia prov on prov.id_provincia = p.envio_id_provincia ';
        $sqlFacturas .= 'INNER JOIN forma_pago fp on fp.id_forma_pago = p.id_forma_pago ';
        $sqlFacturas .= 'LEFT JOIN pedido_descuento pd ON p.id_pedido = pd.id_pedido AND pd.id_tipo_descuento = \'FSHIP\' ';
        $sqlFacturas .= 'LEFT JOIN pedido_bonificacion pb ON p.id_pedido = pb.id_pedido AND pb.id_tipo_descuento = \'FSHIP\' ';
        $sqlFacturas .= 'WHERE date(p.fecha_pago) >= ? AND date(p.fecha_pago) <= ? AND re.tipo = ? AND re.id_eshop = ? ';
        $sqlFacturas .= 'GROUP BY tipo, fecha, fecha_pago, nombre, apellido, importe, provincia, forma_pago';
         
        $sqlNCredito  = '';
        $sqlNCredito .= 'SELECT \'NCREDITO\' as tipo, re.fecha as fecha, group_concat(p.id_pedido separator \', \') as id_pedido, null as fecha_pago, u.nombre as nombre, u.apellido as apellido, re.importe as importe, \'\' as envio, \'\' as costo_mercaderia, prov.nombre as provincia, \'\' as forma_pago ';
        $sqlNCredito .= 'FROM recibo_eshop re ';
        $sqlNCredito .= 'INNER JOIN recibo_eshop_pedido rep ON re.id_recibo_eshop = rep.id_recibo_eshop ';
        $sqlNCredito .= 'INNER JOIN pedido p ON p.id_pedido = rep.id_pedido ';
        $sqlNCredito .= 'INNER JOIN usuario u ON u.id_usuario = p.id_usuario ';
        $sqlNCredito .= 'INNER JOIN provincia prov on prov.id_provincia = p.envio_id_provincia ';
        $sqlNCredito .= 'WHERE date(p.fecha_pago) >= ? AND date(p.fecha_pago) <= ? AND re.tipo = ? AND re.id_eshop = ? ';
        $sqlNCredito .= 'GROUP BY tipo, fecha, fecha_pago, nombre, apellido, importe, provincia, forma_pago';
         
        $q = Doctrine_Manager::getInstance()->getCurrentConnection();
         
        return  $q->fetchAll( "SELECT * FROM ($sqlFacturas UNION $sqlNCredito) T ORDER BY fecha ASC", array($fechaDesde, $fechaHasta, reciboEshop::TIPO_FACTURA, $idEshop, $fechaDesde, $fechaHasta, reciboEshop::TIPO_NOTA_DE_CREDITO, $idEshop));
    }    
    
}