<?php

/**
 * Basenewsletter
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_newsletter
 * @property string $nombre
 * @property string $apellido
 * @property string $sexo
 * @property string $email
 * @property date $fecha_alta
 * @property string $source
 * @property date $fecha_source
 * @property string $utm_campaign
 * @property string $utm_term
 * @property integer $id_eshop
 * @property eshop $eshop
 * 
 * @method integer    getIdNewsletter()  Returns the current record's "id_newsletter" value
 * @method string     getNombre()        Returns the current record's "nombre" value
 * @method string     getApellido()      Returns the current record's "apellido" value
 * @method string     getSexo()          Returns the current record's "sexo" value
 * @method string     getEmail()         Returns the current record's "email" value
 * @method date       getFechaAlta()     Returns the current record's "fecha_alta" value
 * @method string     getSource()        Returns the current record's "source" value
 * @method date       getFechaSource()   Returns the current record's "fecha_source" value
 * @method string     getUtmCampaign()   Returns the current record's "utm_campaign" value
 * @method string     getUtmTerm()       Returns the current record's "utm_term" value
 * @method integer    getIdEshop()       Returns the current record's "id_eshop" value
 * @method eshop      getEshop()         Returns the current record's "eshop" value
 * @method newsletter setIdNewsletter()  Sets the current record's "id_newsletter" value
 * @method newsletter setNombre()        Sets the current record's "nombre" value
 * @method newsletter setApellido()      Sets the current record's "apellido" value
 * @method newsletter setSexo()          Sets the current record's "sexo" value
 * @method newsletter setEmail()         Sets the current record's "email" value
 * @method newsletter setFechaAlta()     Sets the current record's "fecha_alta" value
 * @method newsletter setSource()        Sets the current record's "source" value
 * @method newsletter setFechaSource()   Sets the current record's "fecha_source" value
 * @method newsletter setUtmCampaign()   Sets the current record's "utm_campaign" value
 * @method newsletter setUtmTerm()       Sets the current record's "utm_term" value
 * @method newsletter setIdEshop()       Sets the current record's "id_eshop" value
 * @method newsletter setEshop()         Sets the current record's "eshop" value
 * 
 * @package    deluxebuys
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basenewsletter extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('newsletter');
        $this->hasColumn('id_newsletter', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('apellido', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('sexo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'notnull' => true,
             'length' => 1,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('fecha_alta', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('fecha_source', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('utm_campaign', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('utm_term', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('id_eshop', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('unique_row', array(
             'fields' => 
             array(
              'email' => 
              array(
              'sorting' => 'ASC',
              ),
              'sexo' => 
              array(
              'sorting' => 'ASC',
              ),
              'id_eshop' => 
              array(
              'sorting' => 'ASC',
              ),
             ),
             'type' => 'unique',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('eshop', array(
             'local' => 'id_eshop',
             'foreign' => 'id_eshop',
             'owningSide' => true));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'fecha_alta',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
             ),
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}