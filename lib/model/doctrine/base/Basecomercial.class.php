<?php

/**
 * Basecomercial
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_comercial
 * @property string $nombre
 * @property string $apellido
 * @property Doctrine_Collection $campanaMarca
 * 
 * @method integer             getIdComercial()  Returns the current record's "id_comercial" value
 * @method string              getNombre()       Returns the current record's "nombre" value
 * @method string              getApellido()     Returns the current record's "apellido" value
 * @method Doctrine_Collection getCampanaMarca() Returns the current record's "campanaMarca" collection
 * @method comercial           setIdComercial()  Sets the current record's "id_comercial" value
 * @method comercial           setNombre()       Sets the current record's "nombre" value
 * @method comercial           setApellido()     Sets the current record's "apellido" value
 * @method comercial           setCampanaMarca() Sets the current record's "campanaMarca" collection
 * 
 * @package    deluxebuys
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecomercial extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comercial');
        $this->hasColumn('id_comercial', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('apellido', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('campanaMarca', array(
             'local' => 'id_comercial',
             'foreign' => 'id_comercial'));
    }
}